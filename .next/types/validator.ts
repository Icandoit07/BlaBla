// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/(auth)/forgot-password/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/forgot-password">> = Specific
  const handler = {} as typeof import("../../src/app/(auth)/forgot-password/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(auth)/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../src/app/(auth)/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(auth)/onboarding/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/onboarding">> = Specific
  const handler = {} as typeof import("../../src/app/(auth)/onboarding/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/(auth)/register/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/register">> = Specific
  const handler = {} as typeof import("../../src/app/(auth)/register/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/bookmarks/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/bookmarks">> = Specific
  const handler = {} as typeof import("../../src/app/bookmarks/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/compose/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/compose">> = Specific
  const handler = {} as typeof import("../../src/app/compose/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/feed/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/feed">> = Specific
  const handler = {} as typeof import("../../src/app/feed/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/notifications/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/notifications">> = Specific
  const handler = {} as typeof import("../../src/app/notifications/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/post/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/post/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/post/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/search/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/search">> = Specific
  const handler = {} as typeof import("../../src/app/search/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../src/app/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/settings/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings/profile">> = Specific
  const handler = {} as typeof import("../../src/app/settings/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/trending/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/trending">> = Specific
  const handler = {} as typeof import("../../src/app/trending/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/u/[username]/followers/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/u/[username]/followers">> = Specific
  const handler = {} as typeof import("../../src/app/u/[username]/followers/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/u/[username]/following/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/u/[username]/following">> = Specific
  const handler = {} as typeof import("../../src/app/u/[username]/following/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/u/[username]/likes/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/u/[username]/likes">> = Specific
  const handler = {} as typeof import("../../src/app/u/[username]/likes/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/u/[username]/media/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/u/[username]/media">> = Specific
  const handler = {} as typeof import("../../src/app/u/[username]/media/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/u/[username]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/u/[username]">> = Specific
  const handler = {} as typeof import("../../src/app/u/[username]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/u/[username]/replies/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/u/[username]/replies">> = Specific
  const handler = {} as typeof import("../../src/app/u/[username]/replies/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/[...nextauth]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/[...nextauth]">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/[...nextauth]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/check-username/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/check-username">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/check-username/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/complete-onboarding/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/complete-onboarding">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/complete-onboarding/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/forgot-password/reset/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/forgot-password/reset">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/forgot-password/reset/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/forgot-password/send-otp/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/forgot-password/send-otp">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/forgot-password/send-otp/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/forgot-password/verify-otp/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/forgot-password/verify-otp">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/forgot-password/verify-otp/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/register/complete/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/register/complete">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/register/complete/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/register/send-otp/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/register/send-otp">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/register/send-otp/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/register/verify-otp/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/register/verify-otp">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/register/verify-otp/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/send-otp/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/send-otp">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/send-otp/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/auth/verify-otp/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/verify-otp">> = Specific
  const handler = {} as typeof import("../../src/app/api/auth/verify-otp/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/health/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/health">> = Specific
  const handler = {} as typeof import("../../src/app/api/health/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/media/presigned-url/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/media/presigned-url">> = Specific
  const handler = {} as typeof import("../../src/app/api/media/presigned-url/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/media/upload/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/media/upload">> = Specific
  const handler = {} as typeof import("../../src/app/api/media/upload/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/notifications/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/notifications">> = Specific
  const handler = {} as typeof import("../../src/app/api/notifications/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/polls/[id]/vote/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/polls/[id]/vote">> = Specific
  const handler = {} as typeof import("../../src/app/api/polls/[id]/vote/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/polls/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/polls">> = Specific
  const handler = {} as typeof import("../../src/app/api/polls/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/posts/[id]/bookmark/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/posts/[id]/bookmark">> = Specific
  const handler = {} as typeof import("../../src/app/api/posts/[id]/bookmark/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/posts/[id]/comments/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/posts/[id]/comments">> = Specific
  const handler = {} as typeof import("../../src/app/api/posts/[id]/comments/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/posts/[id]/like/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/posts/[id]/like">> = Specific
  const handler = {} as typeof import("../../src/app/api/posts/[id]/like/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/posts/[id]/quote/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/posts/[id]/quote">> = Specific
  const handler = {} as typeof import("../../src/app/api/posts/[id]/quote/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/posts/[id]/repost/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/posts/[id]/repost">> = Specific
  const handler = {} as typeof import("../../src/app/api/posts/[id]/repost/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/posts/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/posts">> = Specific
  const handler = {} as typeof import("../../src/app/api/posts/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/register/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/register">> = Specific
  const handler = {} as typeof import("../../src/app/api/register/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/search/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/search">> = Specific
  const handler = {} as typeof import("../../src/app/api/search/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/trending/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/trending">> = Specific
  const handler = {} as typeof import("../../src/app/api/trending/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/users/[id]/follow/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/users/[id]/follow">> = Specific
  const handler = {} as typeof import("../../src/app/api/users/[id]/follow/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/users/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/users/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/users/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/users/suggestions/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/users/suggestions">> = Specific
  const handler = {} as typeof import("../../src/app/api/users/suggestions/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
