{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/Blahblah/blabla/src/lib/db.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var prismaGlobal: PrismaClient | undefined;\n}\n\nexport const prisma: PrismaClient = global.prismaGlobal || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") {\n  global.prismaGlobal = prisma;\n}\n\n\n"],"names":[],"mappings":";;;;AAAA;;AAOO,MAAM,SAAuB,OAAO,YAAY,IAAI,IAAI,6IAAY;AAE3E,wCAA2C;IACzC,OAAO,YAAY,GAAG;AACxB","debugId":null}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/Blahblah/blabla/src/components/PostCard.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const PostCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call PostCard() from the server but PostCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/PostCard.tsx <module evaluation>\",\n    \"PostCard\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,WAAW,IAAA,wQAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,6DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/Blahblah/blabla/src/components/PostCard.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const PostCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call PostCard() from the server but PostCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/PostCard.tsx\",\n    \"PostCard\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,WAAW,IAAA,wQAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,yCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/Blahblah/blabla/src/lib/authOptions.ts"],"sourcesContent":["import type { NextAuthOptions } from \"next-auth\";\nimport Credentials from \"next-auth/providers/credentials\";\nimport { prisma } from \"@/lib/db\";\nimport { compare } from \"bcryptjs\";\n\nexport const authOptions: NextAuthOptions = {\n  session: { strategy: \"jwt\" },\n  providers: [\n    Credentials({\n      name: \"Credentials\",\n      credentials: {\n        username: { label: \"Username\", type: \"text\" },\n        password: { label: \"Password\", type: \"password\" },\n      },\n      async authorize(credentials) {\n        if (!credentials?.username || !credentials?.password) return null;\n        const user = await prisma.user.findUnique({ where: { username: credentials.username } });\n        if (!user?.passwordHash) return null;\n        const ok = await compare(credentials.password, user.passwordHash);\n        if (!ok) return null;\n        return { id: user.id, name: user.name, email: user.email, image: user.image };\n      },\n    }),\n  ],\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        token.id = user.id;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      if (token && session.user) {\n        (session.user as any).id = token.id;\n      }\n      return session;\n    },\n  },\n  pages: {\n    signIn: \"/(auth)/login\",\n  },\n};\n\n\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;AAEO,MAAM,cAA+B;IAC1C,SAAS;QAAE,UAAU;IAAM;IAC3B,WAAW;QACT,IAAA,mKAAW,EAAC;YACV,MAAM;YACN,aAAa;gBACX,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAO;gBAC5C,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,IAAI,CAAC,aAAa,YAAY,CAAC,aAAa,UAAU,OAAO;gBAC7D,MAAM,OAAO,MAAM,0HAAM,CAAC,IAAI,CAAC,UAAU,CAAC;oBAAE,OAAO;wBAAE,UAAU,YAAY,QAAQ;oBAAC;gBAAE;gBACtF,IAAI,CAAC,MAAM,cAAc,OAAO;gBAChC,MAAM,KAAK,MAAM,IAAA,4IAAO,EAAC,YAAY,QAAQ,EAAE,KAAK,YAAY;gBAChE,IAAI,CAAC,IAAI,OAAO;gBAChB,OAAO;oBAAE,IAAI,KAAK,EAAE;oBAAE,MAAM,KAAK,IAAI;oBAAE,OAAO,KAAK,KAAK;oBAAE,OAAO,KAAK,KAAK;gBAAC;YAC9E;QACF;KACD;IACD,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,KAAK,EAAE;YACpB;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,SAAS,QAAQ,IAAI,EAAE;gBACxB,QAAQ,IAAI,CAAS,EAAE,GAAG,MAAM,EAAE;YACrC;YACA,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;IACV;AACF","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/Blahblah/blabla/src/app/u/%5Busername%5D/replies/page.tsx"],"sourcesContent":["import { prisma } from \"@/lib/db\";\nimport { notFound } from \"next/navigation\";\nimport Link from \"next/link\";\nimport { PostCard } from \"@/components/PostCard\";\nimport { MessageIcon } from \"@/components/icons\";\nimport { getServerSession } from \"next-auth\";\nimport { authOptions } from \"@/lib/authOptions\";\n\nexport default async function RepliesPage({\n  params,\n}: {\n  params: Promise<{ username: string }>;\n}) {\n  const { username } = await params;\n  const session = await getServerSession(authOptions);\n\n  const user = await prisma.user.findUnique({\n    where: { username },\n    select: {\n      id: true,\n      name: true,\n      username: true,\n      image: true,\n      verified: true,\n      comments: {\n        include: {\n          post: {\n            include: {\n              author: {\n                select: {\n                  id: true,\n                  name: true,\n                  username: true,\n                  image: true,\n                  verified: true,\n                },\n              },\n              likes: session?.user?.id\n                ? { where: { userId: session.user.id }, select: { userId: true } }\n                : false,\n              bookmarks: session?.user?.id\n                ? { where: { userId: session.user.id }, select: { userId: true } }\n                : false,\n              reposts: session?.user?.id\n                ? { where: { userId: session.user.id }, select: { userId: true } }\n                : false,\n              _count: {\n                select: {\n                  likes: true,\n                  comments: true,\n                  reposts: true,\n                  bookmarks: true,\n                },\n              },\n            },\n          },\n        },\n        orderBy: { createdAt: \"desc\" },\n        take: 50,\n      },\n    },\n  });\n\n  if (!user) {\n    notFound();\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"mb-6\">\n          <Link href={`/u/${user.username}`} className=\"inline-flex items-center gap-2 text-green-600 hover:text-green-700 font-semibold mb-4\">\n            ‚Üê Back to profile\n          </Link>\n          <div className=\"flex items-center gap-3\">\n            <MessageIcon size={32} className=\"text-gray-900\" />\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">Replies by {user.name || `@${user.username}`}</h1>\n              <p className=\"text-gray-600\">All replies and comments</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Replies List */}\n        <div className=\"space-y-4\">\n          {user.comments.length === 0 ? (\n            <div className=\"text-center py-16 bg-white rounded-2xl border border-gray-200\">\n              <MessageIcon size={64} className=\"text-gray-300 mx-auto mb-4\" />\n              <p className=\"text-gray-600 text-lg font-medium mb-2\">No replies yet</p>\n              <p className=\"text-gray-500 text-sm\">\n                When {user.name || `@${user.username}`} replies to posts, they'll show up here.\n              </p>\n            </div>\n          ) : (\n            user.comments.map((comment) => (\n              <div key={comment.id} className=\"bg-white rounded-2xl border border-gray-200 p-4\">\n                <div className=\"flex items-start gap-3 mb-3\">\n                  <div className=\"text-sm text-gray-600\">\n                    Replying to <Link href={`/u/${comment.post.author.username}`} className=\"text-green-600 hover:underline\">@{comment.post.author.username}</Link>\n                  </div>\n                </div>\n                <div className=\"mb-4\">\n                  <p className=\"text-gray-900\">{comment.content}</p>\n                  <p className=\"text-gray-500 text-sm mt-2\">\n                    {new Date(comment.createdAt).toLocaleDateString('en-US', {\n                      month: 'short',\n                      day: 'numeric',\n                      year: 'numeric',\n                      hour: 'numeric',\n                      minute: '2-digit',\n                    })}\n                  </p>\n                </div>\n                <div className=\"border-t border-gray-200 pt-4\">\n                  <p className=\"text-gray-600 text-sm mb-2\">Original post:</p>\n                  <PostCard \n                    id={comment.post.id}\n                    author={{\n                      username: comment.post.author?.username,\n                      name: comment.post.author?.name\n                    }}\n                    content={comment.post.content}\n                    counts={{\n                      likes: comment.post._count?.likes || 0,\n                      comments: comment.post._count?.comments || 0\n                    }}\n                  />\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}